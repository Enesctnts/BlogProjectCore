@using EntityLayer.Concrete
@model List<Blog>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/UserLayout.cshtml";
}

<section class="main-content-w3layouts-agileits">
    <div class="container">
        <h3 class="tittle">Bloglar</h3>
        <div class="inner-sec">
            left
            <div class="left-blog-info-w3layouts-agileits text-left">
                <div class="row">
                    @foreach (var item in Model)
                    {
                        <div class="col-lg-4 card">
                            <a href="single.html">
                                <img src="@item.BlogImage" class="card-img-top img-fluid" alt="">
                            </a>
                            <div class="card-body">
                                <ul class="blog-icons my-4">
                                    <li>
                                        <a href="#">
                                            <i class="far fa-calendar-alt"></i> @(((DateTime)@item.BlogCreateDate).ToString("dd-MMM-yyyy"))
                                        </a>
                                    </li>
                                    <li class="mx-2">
                                        <a href="#">
                                            <i class="far fa-comment"></i> 0
                                        </a>
                                    </li>
                                    <li>
                                        <a href="#">     
                                            <i class="fas fa-eye"></i> @item.Category.CategoryName
                                        </a>
                                    </li>

                                </ul>
                                <h5 class="card-title">
                                    <a href="/Blog/BlogReadAll/@item.BlogID/">@item.BlogTitle</a>
                                </h5>

                                <!-- item.BlogContent.Substring(0, item.BlogContent.Substring(0,130).LastIndexOf(" "))  burda Substring yapmamızın sebebi yazılan yazıların belirli harften fazlasını alma örnek olarak minimum 0 maksimum 100 harf olucak. 100 harfe kadarını alcak geri kalan işlemide devamını oku butonu yapıcaz ordan görebilecekler. Eger yazılarda 100 harften az yazı var ise hata verir.  item.BlogContent.Substring(0,130).LastIndexOf(" ") bu kısım ise içeriğimizin 130 harfine kadar al ama 130 harf bir kelimenin ortasına geliyosa o kelimeden sonraki boşluga kadar al diyoruz. Yani 130 kelimeden sonraki boşluga kadar al diyoruz.  -->

                                <p class="card-text mb-3">@item.BlogContent.Substring(0, item.BlogContent.Substring(0, 130).LastIndexOf(" "))...</p>
                                <!-- BlogId göndermemizin sebebi Devamını okuya bastıgında hangi yazıdaki devamını oku butonunu bastıgını id ile o sayfaya göndericez. O sayfada yazının devamını görebileceğiz-->
                                <a href="/Blog/BlogReadAll/@item.BlogID/" class="btn btn-primary read-m">Devamını Oku</a>
                            </div>
                        </div>
                    }
                </div>
                <br />

            </div>
        </div>
    </div>
</section>
